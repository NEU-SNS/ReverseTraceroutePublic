// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ping.proto

package datamodel

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PingMeasurement struct {
	Src                    uint32   `protobuf:"varint,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst                    uint32   `protobuf:"varint,2,opt,name=dst,proto3" json:"dst,omitempty"`
	SpooferAddr            uint32   `protobuf:"varint,3,opt,name=spoofer_addr,json=spooferAddr,proto3" json:"spoofer_addr,omitempty"`
	Spoof                  bool     `protobuf:"varint,4,opt,name=spoof,proto3" json:"spoof,omitempty"`
	RR                     bool     `protobuf:"varint,5,opt,name=RR,proto3" json:"RR,omitempty"`
	SAddr                  string   `protobuf:"bytes,6,opt,name=s_addr,json=sAddr,proto3" json:"s_addr,omitempty"`
	Payload                string   `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"`
	Count                  string   `protobuf:"bytes,8,opt,name=count,proto3" json:"count,omitempty"`
	IcmpSum                string   `protobuf:"bytes,9,opt,name=icmp_sum,json=icmpSum,proto3" json:"icmp_sum,omitempty"`
	Dport                  string   `protobuf:"bytes,10,opt,name=dport,proto3" json:"dport,omitempty"`
	Sport                  string   `protobuf:"bytes,11,opt,name=sport,proto3" json:"sport,omitempty"`
	Wait                   string   `protobuf:"bytes,12,opt,name=wait,proto3" json:"wait,omitempty"`
	Ttl                    string   `protobuf:"bytes,13,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Mtu                    string   `protobuf:"bytes,14,opt,name=mtu,proto3" json:"mtu,omitempty"`
	ReplyCount             string   `protobuf:"bytes,15,opt,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"`
	Pattern                string   `protobuf:"bytes,16,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Method                 string   `protobuf:"bytes,17,opt,name=method,proto3" json:"method,omitempty"`
	Size                   string   `protobuf:"bytes,18,opt,name=size,proto3" json:"size,omitempty"`
	UserId                 string   `protobuf:"bytes,19,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Tos                    string   `protobuf:"bytes,20,opt,name=tos,proto3" json:"tos,omitempty"`
	TimeStamp              string   `protobuf:"bytes,21,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	Timeout                int64    `protobuf:"varint,22,opt,name=timeout,proto3" json:"timeout,omitempty"`
	IcmpTimestamp          bool     `protobuf:"varint,23,opt,name=icmp_timestamp,json=icmpTimestamp,proto3" json:"icmp_timestamp,omitempty"`
	CheckCache             bool     `protobuf:"varint,24,opt,name=check_cache,json=checkCache,proto3" json:"check_cache,omitempty"`
	CheckDb                bool     `protobuf:"varint,25,opt,name=check_db,json=checkDb,proto3" json:"check_db,omitempty"`
	Staleness              int64    `protobuf:"varint,26,opt,name=staleness,proto3" json:"staleness,omitempty"`
	IsRipeAtlas            bool     `protobuf:"varint,27,opt,name=is_ripe_atlas,json=isRipeAtlas,proto3" json:"is_ripe_atlas,omitempty"`
	RipeApiKey             string   `protobuf:"bytes,28,opt,name=ripe_api_key,json=ripeApiKey,proto3" json:"ripe_api_key,omitempty"`
	RipeQueryUrl           string   `protobuf:"bytes,29,opt,name=ripe_query_url,json=ripeQueryUrl,proto3" json:"ripe_query_url,omitempty"`
	RipeQueryBody          string   `protobuf:"bytes,30,opt,name=ripe_query_body,json=ripeQueryBody,proto3" json:"ripe_query_body,omitempty"`
	Label                  string   `protobuf:"bytes,31,opt,name=label,proto3" json:"label,omitempty"`
	SaveDb                 bool     `protobuf:"varint,32,opt,name=save_db,json=saveDb,proto3" json:"save_db,omitempty"`
	IsAbsoluteSpoofTimeout bool     `protobuf:"varint,33,opt,name=is_absolute_spoof_timeout,json=isAbsoluteSpoofTimeout,proto3" json:"is_absolute_spoof_timeout,omitempty"`
	SpoofTimeout           uint32   `protobuf:"varint,34,opt,name=spoof_timeout,json=spoofTimeout,proto3" json:"spoof_timeout,omitempty"`
	FromRevtr              bool     `protobuf:"varint,35,opt,name=from_revtr,json=fromRevtr,proto3" json:"from_revtr,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *PingMeasurement) Reset()         { *m = PingMeasurement{} }
func (m *PingMeasurement) String() string { return proto.CompactTextString(m) }
func (*PingMeasurement) ProtoMessage()    {}
func (*PingMeasurement) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d51d96c3ad891f5, []int{0}
}

func (m *PingMeasurement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMeasurement.Unmarshal(m, b)
}
func (m *PingMeasurement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMeasurement.Marshal(b, m, deterministic)
}
func (m *PingMeasurement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMeasurement.Merge(m, src)
}
func (m *PingMeasurement) XXX_Size() int {
	return xxx_messageInfo_PingMeasurement.Size(m)
}
func (m *PingMeasurement) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMeasurement.DiscardUnknown(m)
}

var xxx_messageInfo_PingMeasurement proto.InternalMessageInfo

func (m *PingMeasurement) GetSrc() uint32 {
	if m != nil {
		return m.Src
	}
	return 0
}

func (m *PingMeasurement) GetDst() uint32 {
	if m != nil {
		return m.Dst
	}
	return 0
}

func (m *PingMeasurement) GetSpooferAddr() uint32 {
	if m != nil {
		return m.SpooferAddr
	}
	return 0
}

func (m *PingMeasurement) GetSpoof() bool {
	if m != nil {
		return m.Spoof
	}
	return false
}

func (m *PingMeasurement) GetRR() bool {
	if m != nil {
		return m.RR
	}
	return false
}

func (m *PingMeasurement) GetSAddr() string {
	if m != nil {
		return m.SAddr
	}
	return ""
}

func (m *PingMeasurement) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *PingMeasurement) GetCount() string {
	if m != nil {
		return m.Count
	}
	return ""
}

func (m *PingMeasurement) GetIcmpSum() string {
	if m != nil {
		return m.IcmpSum
	}
	return ""
}

func (m *PingMeasurement) GetDport() string {
	if m != nil {
		return m.Dport
	}
	return ""
}

func (m *PingMeasurement) GetSport() string {
	if m != nil {
		return m.Sport
	}
	return ""
}

func (m *PingMeasurement) GetWait() string {
	if m != nil {
		return m.Wait
	}
	return ""
}

func (m *PingMeasurement) GetTtl() string {
	if m != nil {
		return m.Ttl
	}
	return ""
}

func (m *PingMeasurement) GetMtu() string {
	if m != nil {
		return m.Mtu
	}
	return ""
}

func (m *PingMeasurement) GetReplyCount() string {
	if m != nil {
		return m.ReplyCount
	}
	return ""
}

func (m *PingMeasurement) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *PingMeasurement) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *PingMeasurement) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *PingMeasurement) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PingMeasurement) GetTos() string {
	if m != nil {
		return m.Tos
	}
	return ""
}

func (m *PingMeasurement) GetTimeStamp() string {
	if m != nil {
		return m.TimeStamp
	}
	return ""
}

func (m *PingMeasurement) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *PingMeasurement) GetIcmpTimestamp() bool {
	if m != nil {
		return m.IcmpTimestamp
	}
	return false
}

func (m *PingMeasurement) GetCheckCache() bool {
	if m != nil {
		return m.CheckCache
	}
	return false
}

func (m *PingMeasurement) GetCheckDb() bool {
	if m != nil {
		return m.CheckDb
	}
	return false
}

func (m *PingMeasurement) GetStaleness() int64 {
	if m != nil {
		return m.Staleness
	}
	return 0
}

func (m *PingMeasurement) GetIsRipeAtlas() bool {
	if m != nil {
		return m.IsRipeAtlas
	}
	return false
}

func (m *PingMeasurement) GetRipeApiKey() string {
	if m != nil {
		return m.RipeApiKey
	}
	return ""
}

func (m *PingMeasurement) GetRipeQueryUrl() string {
	if m != nil {
		return m.RipeQueryUrl
	}
	return ""
}

func (m *PingMeasurement) GetRipeQueryBody() string {
	if m != nil {
		return m.RipeQueryBody
	}
	return ""
}

func (m *PingMeasurement) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *PingMeasurement) GetSaveDb() bool {
	if m != nil {
		return m.SaveDb
	}
	return false
}

func (m *PingMeasurement) GetIsAbsoluteSpoofTimeout() bool {
	if m != nil {
		return m.IsAbsoluteSpoofTimeout
	}
	return false
}

func (m *PingMeasurement) GetSpoofTimeout() uint32 {
	if m != nil {
		return m.SpoofTimeout
	}
	return 0
}

func (m *PingMeasurement) GetFromRevtr() bool {
	if m != nil {
		return m.FromRevtr
	}
	return false
}

type PingArg struct {
	Pings                []*PingMeasurement `protobuf:"bytes,1,rep,name=pings,proto3" json:"pings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PingArg) Reset()         { *m = PingArg{} }
func (m *PingArg) String() string { return proto.CompactTextString(m) }
func (*PingArg) ProtoMessage()    {}
func (*PingArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d51d96c3ad891f5, []int{1}
}

func (m *PingArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingArg.Unmarshal(m, b)
}
func (m *PingArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingArg.Marshal(b, m, deterministic)
}
func (m *PingArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingArg.Merge(m, src)
}
func (m *PingArg) XXX_Size() int {
	return xxx_messageInfo_PingArg.Size(m)
}
func (m *PingArg) XXX_DiscardUnknown() {
	xxx_messageInfo_PingArg.DiscardUnknown(m)
}

var xxx_messageInfo_PingArg proto.InternalMessageInfo

func (m *PingArg) GetPings() []*PingMeasurement {
	if m != nil {
		return m.Pings
	}
	return nil
}

type PingArgResp struct {
	Pings                []*Ping  `protobuf:"bytes,1,rep,name=pings,proto3" json:"pings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingArgResp) Reset()         { *m = PingArgResp{} }
func (m *PingArgResp) String() string { return proto.CompactTextString(m) }
func (*PingArgResp) ProtoMessage()    {}
func (*PingArgResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d51d96c3ad891f5, []int{2}
}

func (m *PingArgResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingArgResp.Unmarshal(m, b)
}
func (m *PingArgResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingArgResp.Marshal(b, m, deterministic)
}
func (m *PingArgResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingArgResp.Merge(m, src)
}
func (m *PingArgResp) XXX_Size() int {
	return xxx_messageInfo_PingArgResp.Size(m)
}
func (m *PingArgResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PingArgResp.DiscardUnknown(m)
}

var xxx_messageInfo_PingArgResp proto.InternalMessageInfo

func (m *PingArgResp) GetPings() []*Ping {
	if m != nil {
		return m.Pings
	}
	return nil
}

type PingStats struct {
	Replies              int32    `protobuf:"varint,1,opt,name=replies,proto3" json:"replies,omitempty"`
	Loss                 float32  `protobuf:"fixed32,2,opt,name=loss,proto3" json:"loss,omitempty"`
	Min                  float32  `protobuf:"fixed32,3,opt,name=min,proto3" json:"min,omitempty"`
	Max                  float32  `protobuf:"fixed32,4,opt,name=max,proto3" json:"max,omitempty"`
	Avg                  float32  `protobuf:"fixed32,5,opt,name=avg,proto3" json:"avg,omitempty"`
	Stddev               float32  `protobuf:"fixed32,6,opt,name=stddev,proto3" json:"stddev,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingStats) Reset()         { *m = PingStats{} }
func (m *PingStats) String() string { return proto.CompactTextString(m) }
func (*PingStats) ProtoMessage()    {}
func (*PingStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d51d96c3ad891f5, []int{3}
}

func (m *PingStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingStats.Unmarshal(m, b)
}
func (m *PingStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingStats.Marshal(b, m, deterministic)
}
func (m *PingStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingStats.Merge(m, src)
}
func (m *PingStats) XXX_Size() int {
	return xxx_messageInfo_PingStats.Size(m)
}
func (m *PingStats) XXX_DiscardUnknown() {
	xxx_messageInfo_PingStats.DiscardUnknown(m)
}

var xxx_messageInfo_PingStats proto.InternalMessageInfo

func (m *PingStats) GetReplies() int32 {
	if m != nil {
		return m.Replies
	}
	return 0
}

func (m *PingStats) GetLoss() float32 {
	if m != nil {
		return m.Loss
	}
	return 0
}

func (m *PingStats) GetMin() float32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *PingStats) GetMax() float32 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *PingStats) GetAvg() float32 {
	if m != nil {
		return m.Avg
	}
	return 0
}

func (m *PingStats) GetStddev() float32 {
	if m != nil {
		return m.Stddev
	}
	return 0
}

type PingResponse struct {
	From                 uint32       `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	Seq                  uint32       `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	ReplySize            uint32       `protobuf:"varint,3,opt,name=reply_size,json=replySize,proto3" json:"reply_size,omitempty"`
	ReplyTtl             uint32       `protobuf:"varint,4,opt,name=reply_ttl,json=replyTtl,proto3" json:"reply_ttl,omitempty"`
	ReplyProto           string       `protobuf:"bytes,5,opt,name=reply_proto,json=replyProto,proto3" json:"reply_proto,omitempty"`
	Tx                   *Time        `protobuf:"bytes,6,opt,name=tx,proto3" json:"tx,omitempty"`
	Rx                   *Time        `protobuf:"bytes,7,opt,name=rx,proto3" json:"rx,omitempty"`
	Rtt                  uint32       `protobuf:"varint,8,opt,name=rtt,proto3" json:"rtt,omitempty"`
	ProbeIpid            uint32       `protobuf:"varint,9,opt,name=probe_ipid,json=probeIpid,proto3" json:"probe_ipid,omitempty"`
	ReplyIpid            uint32       `protobuf:"varint,10,opt,name=reply_ipid,json=replyIpid,proto3" json:"reply_ipid,omitempty"`
	IcmpType             uint32       `protobuf:"varint,11,opt,name=icmp_type,json=icmpType,proto3" json:"icmp_type,omitempty"`
	IcmpCode             uint32       `protobuf:"varint,12,opt,name=icmp_code,json=icmpCode,proto3" json:"icmp_code,omitempty"`
	RR                   []uint32     `protobuf:"varint,13,rep,packed,name=RR,proto3" json:"RR,omitempty"`
	Tsonly               []uint32     `protobuf:"varint,14,rep,packed,name=tsonly,proto3" json:"tsonly,omitempty"`
	Tsandaddr            []*TsAndAddr `protobuf:"bytes,15,rep,name=tsandaddr,proto3" json:"tsandaddr,omitempty"`
	IcmpTs               *ICMPTs      `protobuf:"bytes,16,opt,name=icmp_ts,json=icmpTs,proto3" json:"icmp_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d51d96c3ad891f5, []int{4}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func (m *PingResponse) GetFrom() uint32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *PingResponse) GetSeq() uint32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *PingResponse) GetReplySize() uint32 {
	if m != nil {
		return m.ReplySize
	}
	return 0
}

func (m *PingResponse) GetReplyTtl() uint32 {
	if m != nil {
		return m.ReplyTtl
	}
	return 0
}

func (m *PingResponse) GetReplyProto() string {
	if m != nil {
		return m.ReplyProto
	}
	return ""
}

func (m *PingResponse) GetTx() *Time {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *PingResponse) GetRx() *Time {
	if m != nil {
		return m.Rx
	}
	return nil
}

func (m *PingResponse) GetRtt() uint32 {
	if m != nil {
		return m.Rtt
	}
	return 0
}

func (m *PingResponse) GetProbeIpid() uint32 {
	if m != nil {
		return m.ProbeIpid
	}
	return 0
}

func (m *PingResponse) GetReplyIpid() uint32 {
	if m != nil {
		return m.ReplyIpid
	}
	return 0
}

func (m *PingResponse) GetIcmpType() uint32 {
	if m != nil {
		return m.IcmpType
	}
	return 0
}

func (m *PingResponse) GetIcmpCode() uint32 {
	if m != nil {
		return m.IcmpCode
	}
	return 0
}

func (m *PingResponse) GetRR() []uint32 {
	if m != nil {
		return m.RR
	}
	return nil
}

func (m *PingResponse) GetTsonly() []uint32 {
	if m != nil {
		return m.Tsonly
	}
	return nil
}

func (m *PingResponse) GetTsandaddr() []*TsAndAddr {
	if m != nil {
		return m.Tsandaddr
	}
	return nil
}

func (m *PingResponse) GetIcmpTs() *ICMPTs {
	if m != nil {
		return m.IcmpTs
	}
	return nil
}

type TsAndAddr struct {
	Ip                   uint32   `protobuf:"varint,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Ts                   uint32   `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TsAndAddr) Reset()         { *m = TsAndAddr{} }
func (m *TsAndAddr) String() string { return proto.CompactTextString(m) }
func (*TsAndAddr) ProtoMessage()    {}
func (*TsAndAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d51d96c3ad891f5, []int{5}
}

func (m *TsAndAddr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TsAndAddr.Unmarshal(m, b)
}
func (m *TsAndAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TsAndAddr.Marshal(b, m, deterministic)
}
func (m *TsAndAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TsAndAddr.Merge(m, src)
}
func (m *TsAndAddr) XXX_Size() int {
	return xxx_messageInfo_TsAndAddr.Size(m)
}
func (m *TsAndAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_TsAndAddr.DiscardUnknown(m)
}

var xxx_messageInfo_TsAndAddr proto.InternalMessageInfo

func (m *TsAndAddr) GetIp() uint32 {
	if m != nil {
		return m.Ip
	}
	return 0
}

func (m *TsAndAddr) GetTs() uint32 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type ICMPTs struct {
	OriginateTimestamp   uint32   `protobuf:"varint,1,opt,name=originate_timestamp,json=originateTimestamp,proto3" json:"originate_timestamp,omitempty"`
	ReceiveTimestamp     uint32   `protobuf:"varint,2,opt,name=receive_timestamp,json=receiveTimestamp,proto3" json:"receive_timestamp,omitempty"`
	TransmitTimestamp    uint32   `protobuf:"varint,3,opt,name=transmit_timestamp,json=transmitTimestamp,proto3" json:"transmit_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ICMPTs) Reset()         { *m = ICMPTs{} }
func (m *ICMPTs) String() string { return proto.CompactTextString(m) }
func (*ICMPTs) ProtoMessage()    {}
func (*ICMPTs) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d51d96c3ad891f5, []int{6}
}

func (m *ICMPTs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ICMPTs.Unmarshal(m, b)
}
func (m *ICMPTs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ICMPTs.Marshal(b, m, deterministic)
}
func (m *ICMPTs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ICMPTs.Merge(m, src)
}
func (m *ICMPTs) XXX_Size() int {
	return xxx_messageInfo_ICMPTs.Size(m)
}
func (m *ICMPTs) XXX_DiscardUnknown() {
	xxx_messageInfo_ICMPTs.DiscardUnknown(m)
}

var xxx_messageInfo_ICMPTs proto.InternalMessageInfo

func (m *ICMPTs) GetOriginateTimestamp() uint32 {
	if m != nil {
		return m.OriginateTimestamp
	}
	return 0
}

func (m *ICMPTs) GetReceiveTimestamp() uint32 {
	if m != nil {
		return m.ReceiveTimestamp
	}
	return 0
}

func (m *ICMPTs) GetTransmitTimestamp() uint32 {
	if m != nil {
		return m.TransmitTimestamp
	}
	return 0
}

type Ping struct {
	Type                 string          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Method               string          `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Src                  uint32          `protobuf:"varint,3,opt,name=src,proto3" json:"src,omitempty"`
	Dst                  uint32          `protobuf:"varint,4,opt,name=dst,proto3" json:"dst,omitempty"`
	Start                *Time           `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
	PingSent             uint32          `protobuf:"varint,6,opt,name=ping_sent,json=pingSent,proto3" json:"ping_sent,omitempty"`
	ProbeSize            uint32          `protobuf:"varint,7,opt,name=probe_size,json=probeSize,proto3" json:"probe_size,omitempty"`
	UserId               uint32          `protobuf:"varint,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ttl                  uint32          `protobuf:"varint,9,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Wait                 uint32          `protobuf:"varint,10,opt,name=wait,proto3" json:"wait,omitempty"`
	Timeout              uint32          `protobuf:"varint,11,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Flags                []string        `protobuf:"bytes,12,rep,name=flags,proto3" json:"flags,omitempty"`
	Responses            []*PingResponse `protobuf:"bytes,13,rep,name=responses,proto3" json:"responses,omitempty"`
	Statistics           *PingStats      `protobuf:"bytes,14,opt,name=statistics,proto3" json:"statistics,omitempty"`
	Error                string          `protobuf:"bytes,15,opt,name=error,proto3" json:"error,omitempty"`
	Version              string          `protobuf:"bytes,16,opt,name=version,proto3" json:"version,omitempty"`
	SpoofedFrom          uint32          `protobuf:"varint,17,opt,name=spoofed_from,json=spoofedFrom,proto3" json:"spoofed_from,omitempty"`
	Id                   int64           `protobuf:"varint,18,opt,name=id,proto3" json:"id,omitempty"`
	Label                string          `protobuf:"bytes,19,opt,name=label,proto3" json:"label,omitempty"`
	FromCache            bool            `protobuf:"varint,20,opt,name=from_cache,json=fromCache,proto3" json:"from_cache,omitempty"`
	FromRevtr            bool            `protobuf:"varint,21,opt,name=from_revtr,json=fromRevtr,proto3" json:"from_revtr,omitempty"`
	RevtrMeasurementId   uint64          `protobuf:"varint,22,opt,name=revtr_measurement_id,json=revtrMeasurementId,proto3" json:"revtr_measurement_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d51d96c3ad891f5, []int{7}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Ping) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Ping) GetSrc() uint32 {
	if m != nil {
		return m.Src
	}
	return 0
}

func (m *Ping) GetDst() uint32 {
	if m != nil {
		return m.Dst
	}
	return 0
}

func (m *Ping) GetStart() *Time {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Ping) GetPingSent() uint32 {
	if m != nil {
		return m.PingSent
	}
	return 0
}

func (m *Ping) GetProbeSize() uint32 {
	if m != nil {
		return m.ProbeSize
	}
	return 0
}

func (m *Ping) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Ping) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *Ping) GetWait() uint32 {
	if m != nil {
		return m.Wait
	}
	return 0
}

func (m *Ping) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *Ping) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *Ping) GetResponses() []*PingResponse {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *Ping) GetStatistics() *PingStats {
	if m != nil {
		return m.Statistics
	}
	return nil
}

func (m *Ping) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Ping) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Ping) GetSpoofedFrom() uint32 {
	if m != nil {
		return m.SpoofedFrom
	}
	return 0
}

func (m *Ping) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Ping) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Ping) GetFromCache() bool {
	if m != nil {
		return m.FromCache
	}
	return false
}

func (m *Ping) GetFromRevtr() bool {
	if m != nil {
		return m.FromRevtr
	}
	return false
}

func (m *Ping) GetRevtrMeasurementId() uint64 {
	if m != nil {
		return m.RevtrMeasurementId
	}
	return 0
}

func init() {
	proto.RegisterType((*PingMeasurement)(nil), "datamodel.PingMeasurement")
	proto.RegisterType((*PingArg)(nil), "datamodel.PingArg")
	proto.RegisterType((*PingArgResp)(nil), "datamodel.PingArgResp")
	proto.RegisterType((*PingStats)(nil), "datamodel.PingStats")
	proto.RegisterType((*PingResponse)(nil), "datamodel.PingResponse")
	proto.RegisterType((*TsAndAddr)(nil), "datamodel.TsAndAddr")
	proto.RegisterType((*ICMPTs)(nil), "datamodel.ICMPTs")
	proto.RegisterType((*Ping)(nil), "datamodel.Ping")
}

func init() {
	proto.RegisterFile("ping.proto", fileDescriptor_6d51d96c3ad891f5)
}

var fileDescriptor_6d51d96c3ad891f5 = []byte{
	// 1243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x56, 0xdb, 0x6e, 0x1b, 0x37,
	0x10, 0x85, 0x56, 0x37, 0x6b, 0x64, 0xd9, 0x31, 0xe3, 0x38, 0xcc, 0xad, 0x51, 0x94, 0xa6, 0x30,
	0x1a, 0x34, 0x0d, 0xdc, 0xf4, 0xa1, 0xe8, 0x93, 0xe3, 0xa0, 0x80, 0x51, 0x04, 0x48, 0x29, 0xf7,
	0xa5, 0x2f, 0x8b, 0x95, 0xc8, 0x38, 0x44, 0xf6, 0x16, 0x0e, 0xe5, 0x5a, 0xfd, 0x81, 0x7e, 0x41,
	0x7f, 0xac, 0xff, 0xd0, 0xdf, 0x28, 0x8a, 0x19, 0xee, 0x6a, 0x57, 0x6e, 0xde, 0x38, 0x67, 0xce,
	0x70, 0x87, 0xe4, 0xcc, 0x99, 0x05, 0x28, 0x6d, 0x7e, 0xf9, 0xa2, 0x74, 0x85, 0x2f, 0xc4, 0x48,
	0x27, 0x3e, 0xc9, 0x0a, 0x6d, 0xd2, 0xfb, 0xe0, 0x6d, 0x66, 0x02, 0x3c, 0xfb, 0x7b, 0x08, 0xfb,
	0xef, 0x6c, 0x7e, 0xf9, 0xd6, 0x24, 0xb8, 0x72, 0x26, 0x33, 0xb9, 0x17, 0xb7, 0xa0, 0x8b, 0x6e,
	0x29, 0x3b, 0xd3, 0xce, 0xf1, 0x44, 0xd1, 0x92, 0x10, 0x8d, 0x5e, 0x46, 0x01, 0xd1, 0xe8, 0xc5,
	0x13, 0xd8, 0xc5, 0xb2, 0x28, 0xde, 0x1b, 0x17, 0x27, 0x5a, 0x3b, 0xd9, 0x65, 0xd7, 0xb8, 0xc2,
	0x4e, 0xb5, 0x76, 0xe2, 0x10, 0xfa, 0x6c, 0xca, 0xde, 0xb4, 0x73, 0xbc, 0xa3, 0x82, 0x21, 0xf6,
	0x20, 0x52, 0x4a, 0xf6, 0x19, 0x8a, 0x94, 0x12, 0x77, 0x60, 0x80, 0x61, 0x8b, 0xc1, 0xb4, 0x73,
	0x3c, 0x52, 0x7d, 0xe4, 0x60, 0x09, 0xc3, 0x32, 0x59, 0xa7, 0x45, 0xa2, 0xe5, 0x90, 0xf1, 0xda,
	0xa4, 0x6d, 0x97, 0xc5, 0x2a, 0xf7, 0x72, 0x27, 0xf0, 0xd9, 0x10, 0xf7, 0x60, 0xc7, 0x2e, 0xb3,
	0x32, 0xc6, 0x55, 0x26, 0x47, 0x21, 0x80, 0xec, 0xf9, 0x2a, 0xa3, 0x00, 0x5d, 0x16, 0xce, 0x4b,
	0x08, 0x01, 0x6c, 0x54, 0xd9, 0x39, 0x2f, 0xc7, 0xd5, 0x67, 0x19, 0x15, 0xd0, 0xfb, 0x3d, 0xb1,
	0x5e, 0xee, 0x32, 0xc8, 0x6b, 0x3a, 0xbc, 0xf7, 0xa9, 0x9c, 0x30, 0x44, 0x4b, 0x42, 0x32, 0xbf,
	0x92, 0x7b, 0x01, 0xc9, 0xfc, 0x4a, 0x3c, 0x86, 0xb1, 0x33, 0x65, 0xba, 0x8e, 0x43, 0x6a, 0xfb,
	0xec, 0x01, 0x86, 0xce, 0x38, 0x3f, 0x3e, 0x8f, 0xf7, 0xc6, 0xe5, 0xf2, 0x56, 0x7d, 0x1e, 0x36,
	0xc5, 0x11, 0x0c, 0x32, 0xe3, 0x3f, 0x14, 0x5a, 0x1e, 0xb0, 0xa3, 0xb2, 0x28, 0x15, 0xb4, 0x7f,
	0x18, 0x29, 0x42, 0x2a, 0xb4, 0x16, 0x77, 0x61, 0xb8, 0x42, 0xe3, 0x62, 0xab, 0xe5, 0xed, 0x40,
	0x26, 0xf3, 0x5c, 0x73, 0x8e, 0x05, 0xca, 0xc3, 0x2a, 0xc7, 0x02, 0xc5, 0x23, 0xe0, 0x67, 0x8e,
	0xd1, 0x27, 0x59, 0x29, 0xef, 0xb0, 0x63, 0x44, 0xc8, 0x9c, 0x00, 0xca, 0x87, 0x8c, 0x62, 0xe5,
	0xe5, 0xd1, 0xb4, 0x73, 0xdc, 0x55, 0xb5, 0x29, 0x9e, 0xc1, 0x1e, 0xdf, 0x24, 0xd9, 0x21, 0xf8,
	0x2e, 0x3f, 0xd6, 0x84, 0xd0, 0x8b, 0x1a, 0xa4, 0x13, 0x2f, 0x3f, 0x98, 0xe5, 0xc7, 0x78, 0x99,
	0x2c, 0x3f, 0x18, 0x29, 0x99, 0x03, 0x0c, 0x9d, 0x11, 0x42, 0x2f, 0x12, 0x08, 0x7a, 0x21, 0xef,
	0xb1, 0x77, 0xc8, 0xf6, 0x9b, 0x85, 0x78, 0x08, 0x23, 0xf4, 0x49, 0x6a, 0x72, 0x83, 0x28, 0xef,
	0xf3, 0xe7, 0x1b, 0x40, 0xcc, 0x60, 0x62, 0x31, 0x76, 0xb6, 0x34, 0x71, 0xe2, 0xd3, 0x04, 0xe5,
	0x03, 0x8e, 0x1e, 0x5b, 0x54, 0xb6, 0x34, 0xa7, 0x04, 0x89, 0x29, 0xec, 0x06, 0x42, 0x69, 0xe3,
	0x8f, 0x66, 0x2d, 0x1f, 0x56, 0x17, 0x4e, 0x84, 0xd2, 0xfe, 0x6c, 0xd6, 0xe2, 0x4b, 0xd8, 0x63,
	0xc6, 0xa7, 0x95, 0x71, 0xeb, 0x78, 0xe5, 0x52, 0xf9, 0x88, 0x39, 0x1c, 0xf7, 0x0b, 0x81, 0xbf,
	0xba, 0x54, 0x7c, 0x05, 0xfb, 0x2d, 0xd6, 0xa2, 0xd0, 0x6b, 0xf9, 0x05, 0xd3, 0x26, 0x1b, 0xda,
	0xeb, 0x42, 0xaf, 0xa9, 0x5a, 0xd2, 0x64, 0x61, 0x52, 0xf9, 0x38, 0x54, 0x0b, 0x1b, 0xf4, 0x1c,
	0x98, 0x5c, 0x19, 0x3a, 0xe1, 0x94, 0x73, 0x1c, 0x90, 0xf9, 0x66, 0x21, 0x7e, 0x80, 0x7b, 0x16,
	0xe3, 0x64, 0x81, 0x45, 0xba, 0xf2, 0x26, 0xe6, 0xca, 0x8f, 0xeb, 0xfb, 0x7e, 0xc2, 0xd4, 0x23,
	0x8b, 0xa7, 0x95, 0x7f, 0x4e, 0xee, 0x8b, 0xea, 0xfa, 0x9f, 0xc2, 0x64, 0x9b, 0x3e, 0xe3, 0xce,
	0x0a, 0xdd, 0x56, 0x93, 0x1e, 0x01, 0xbc, 0x77, 0x45, 0x16, 0x3b, 0x73, 0xe5, 0x9d, 0x7c, 0xca,
	0x1b, 0x8e, 0x08, 0x51, 0x04, 0xcc, 0x7e, 0x84, 0x21, 0xf5, 0xf4, 0xa9, 0xbb, 0x14, 0x2f, 0xa1,
	0x4f, 0x22, 0x80, 0xb2, 0x33, 0xed, 0x1e, 0x8f, 0x4f, 0xee, 0xbf, 0xd8, 0xc8, 0xc0, 0x8b, 0x1b,
	0x6d, 0xaf, 0x02, 0x71, 0xf6, 0x0a, 0xc6, 0x55, 0xb0, 0x32, 0x58, 0x8a, 0x67, 0xdb, 0x1b, 0xec,
	0xdf, 0xd8, 0xa0, 0x8e, 0xfa, 0xb3, 0x03, 0x23, 0xb2, 0xe7, 0x3e, 0xf1, 0x48, 0xd5, 0x45, 0xb5,
	0x6f, 0x0d, 0xb2, 0x8a, 0xf4, 0x55, 0x6d, 0x52, 0x55, 0xa7, 0x05, 0x22, 0x4b, 0x49, 0xa4, 0x78,
	0xcd, 0xed, 0x64, 0x73, 0x96, 0x90, 0x48, 0xd1, 0x92, 0x91, 0xe4, 0x9a, 0x85, 0x83, 0x90, 0xe4,
	0x9a, 0x90, 0xe4, 0xea, 0x92, 0x75, 0x23, 0x52, 0xb4, 0xa4, 0xbe, 0x41, 0xaf, 0xb5, 0xb9, 0x62,
	0xe1, 0x88, 0x54, 0x65, 0xcd, 0xfe, 0xe9, 0xc2, 0x2e, 0x67, 0x66, 0xb0, 0x2c, 0x72, 0x34, 0xf4,
	0x49, 0xba, 0x9a, 0x4a, 0xcf, 0x78, 0xcd, 0x12, 0x67, 0x3e, 0xd5, 0x82, 0x86, 0xe6, 0x13, 0x5d,
	0x69, 0xe8, 0x60, 0x6e, 0xba, 0x20, 0x67, 0x23, 0x46, 0xe6, 0xd4, 0x79, 0x0f, 0x20, 0x18, 0x31,
	0x49, 0x41, 0x8f, 0xbd, 0x3b, 0x0c, 0x5c, 0xf8, 0xb4, 0xe9, 0x7e, 0xd6, 0x54, 0x4e, 0xb2, 0xee,
	0xfe, 0x77, 0x2c, 0xbe, 0x8f, 0x21, 0xf2, 0xd7, 0x9c, 0xe7, 0xf6, 0x0d, 0xd2, 0x7b, 0xaa, 0xc8,
	0x5f, 0x13, 0xc1, 0x5d, 0xb3, 0xd2, 0x7d, 0x8e, 0xe0, 0xf8, 0xfc, 0xce, 0x07, 0xcd, 0x9b, 0x28,
	0x5a, 0x52, 0xc2, 0xa5, 0x2b, 0x16, 0x26, 0xb6, 0xa5, 0xd5, 0xac, 0x79, 0x13, 0x35, 0x62, 0xe4,
	0xbc, 0xb4, 0xba, 0x39, 0x0f, 0xbb, 0xa1, 0x75, 0x1e, 0x76, 0x3f, 0x80, 0x51, 0xe8, 0xf2, 0x75,
	0x69, 0x58, 0x02, 0x27, 0x8a, 0x05, 0xf4, 0x62, 0x5d, 0x9a, 0x8d, 0x73, 0x59, 0x68, 0xc3, 0x52,
	0x58, 0x39, 0xcf, 0x0a, 0x6d, 0x2a, 0x01, 0x9f, 0x4c, 0xbb, 0xc7, 0x13, 0x16, 0xf0, 0x23, 0x18,
	0x78, 0x2c, 0xf2, 0x74, 0x2d, 0xf7, 0x18, 0xab, 0x2c, 0x71, 0x02, 0x23, 0x8f, 0x49, 0xae, 0x59,
	0xdb, 0xf7, 0xb9, 0x78, 0x0e, 0xdb, 0x27, 0xc3, 0xd3, 0x5c, 0x93, 0xd4, 0xab, 0x86, 0x26, 0xbe,
	0x86, 0x61, 0xc8, 0x0a, 0x59, 0x25, 0xc7, 0x27, 0x07, 0xad, 0x88, 0xf3, 0xb3, 0xb7, 0xef, 0x2e,
	0x50, 0x0d, 0x38, 0x4d, 0x9c, 0x3d, 0x87, 0xd1, 0x66, 0x0f, 0x4a, 0xca, 0x96, 0xd5, 0x0b, 0x47,
	0xb6, 0x24, 0xdb, 0x63, 0xf5, 0xbc, 0x91, 0xc7, 0xd9, 0x5f, 0x1d, 0x18, 0x84, 0x78, 0xf1, 0x2d,
	0xdc, 0x2e, 0x9c, 0xbd, 0xb4, 0x79, 0xe2, 0x4d, 0x4b, 0xe4, 0x42, 0xac, 0xd8, 0xb8, 0x1a, 0xa5,
	0x7b, 0x0e, 0x07, 0xce, 0x2c, 0x8d, 0xbd, 0x6a, 0xd3, 0xc3, 0xd6, 0xb7, 0x2a, 0x47, 0x43, 0xfe,
	0x06, 0x84, 0x77, 0x49, 0x8e, 0x99, 0xf5, 0x2d, 0x76, 0x28, 0xa7, 0x83, 0xda, 0xb3, 0xa1, 0xcf,
	0xfe, 0xed, 0x41, 0x8f, 0x8a, 0x95, 0x8a, 0x94, 0x9f, 0xa2, 0x13, 0xd4, 0x9e, 0xd6, 0xad, 0xc9,
	0x10, 0x6d, 0x4d, 0x86, 0x6a, 0x3e, 0x77, 0xff, 0x37, 0x9f, 0x7b, 0xcd, 0x7c, 0x7e, 0x06, 0x7d,
	0xf4, 0x89, 0xf3, 0x5c, 0x8c, 0x9f, 0xa9, 0xa9, 0xe0, 0xa5, 0x97, 0xa6, 0xfe, 0x8d, 0xd1, 0xe4,
	0x9e, 0xeb, 0x73, 0xa2, 0x76, 0x08, 0x98, 0xd3, 0x7f, 0xc0, 0xa6, 0xc2, 0xb8, 0x25, 0x86, 0xad,
	0x0a, 0x9b, 0xdf, 0x18, 0x46, 0xa1, 0x2c, 0xdb, 0xc3, 0xc8, 0xa7, 0x55, 0x49, 0xf2, 0xc0, 0xac,
	0xc7, 0x6a, 0x28, 0xc3, 0x30, 0x56, 0x5b, 0x13, 0x28, 0xd4, 0xdf, 0x66, 0x02, 0x1d, 0x42, 0xff,
	0x7d, 0x9a, 0x5c, 0xa2, 0xdc, 0x9d, 0x76, 0x49, 0x6c, 0xd9, 0x10, 0xdf, 0x53, 0x07, 0x86, 0x96,
	0x46, 0x2e, 0xbf, 0xf1, 0xc9, 0xdd, 0x9b, 0x62, 0x54, 0xf9, 0x55, 0xc3, 0x14, 0xaf, 0x00, 0xd0,
	0x27, 0xde, 0xa2, 0xb7, 0x4b, 0xe4, 0x91, 0xbd, 0x5d, 0x87, 0x1b, 0xd1, 0x52, 0x2d, 0x1e, 0xa5,
	0x60, 0x9c, 0x2b, 0x5c, 0x35, 0xc9, 0x83, 0x41, 0x29, 0x5f, 0x19, 0x87, 0xb6, 0xd8, 0x0c, 0xf1,
	0xca, 0x6c, 0x7e, 0x87, 0x74, 0xcc, 0x5a, 0x73, 0xd0, 0xfe, 0x1d, 0xd2, 0x3f, 0x91, 0xe4, 0x50,
	0x89, 0x6a, 0x9e, 0xe6, 0x5d, 0x15, 0x59, 0xdd, 0x8c, 0x94, 0xdb, 0xed, 0x91, 0x52, 0x2b, 0x7b,
	0x98, 0xaa, 0x87, 0x8d, 0xb2, 0x87, 0xa1, 0xba, 0x2d, 0xfc, 0x77, 0x6e, 0x08, 0xbf, 0x78, 0x09,
	0x87, 0xec, 0x89, 0xb3, 0x46, 0xd7, 0xe9, 0x7d, 0x68, 0xc4, 0xf7, 0x94, 0x60, 0x5f, 0x4b, 0xf2,
	0xcf, 0xf5, 0xeb, 0xf1, 0x6f, 0xcd, 0x8f, 0xe1, 0x62, 0xc0, 0xfa, 0xf5, 0xdd, 0x7f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x48, 0xda, 0xc4, 0xc0, 0x38, 0x0a, 0x00, 0x00,
}
